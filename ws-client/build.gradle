apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin :'no.nils.wsdl2java'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
version = '1.0'

jar {
    baseName = 'ws-client'
}

mainClassName = 'demo.service.client.Application'

repositories {
    mavenCentral()
    maven { url 'http://repository.apache.org/snapshots/' }
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.apache.cxf:cxf-rt-frontend-jaxws:3.0.5'
    compile 'org.apache.cxf:cxf-rt-transports-http:3.0.5'
    compile 'org.apache.cxf:cxf-rt-security:3.0.5'
    compile 'org.apache.cxf:cxf-rt-ws-security:3.0.6-SNAPSHOT'
    compile 'org.apache.cxf:cxf-rt-ws-policy:3.0.5'
    compile 'org.apache.cxf:cxf-core:3.0.5'
    compile 'org.slf4j:slf4j-api:1.7.10'
    
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

buildscript {
    repositories {
        mavenCentral()
        // for wsdl2java
        jcenter()
    }
    dependencies {
        // for wsdl2java
        classpath 'no.nils:wsdl2java:0.6'
	classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
    }
}


uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

wsdl2java{
    // specify options, with last argument being the wsdl to process
    wsdlsToGenerate = [
            ['-wsdlLocation', 'classpath:wsdl/helloWorld.wsdl', "$projectDir/src/main/resources/wsdl/hello.wsdl"]
    ]
    // where the outputted java classes go
    generatedWsdlDir = file("$projectDir/generatedsources")
    // directory to monitor for changes to wsdl
    wsdlDir = file("$projectDir/src/main/resources/wsdl")
    // self-explanatory
    cxfVersion = "3.0.5"
}
// To enable, change this to true and it will generate the client code
wsdl2java.enabled = false;
